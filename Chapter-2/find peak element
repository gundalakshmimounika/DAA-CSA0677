def find_peak_element(nums):
    left, right = 0, len(nums) - 1

    while left < right:
        mid = (left + right) // 2

        # Compare middle element with its right neighbor
        if nums[mid] < nums[mid + 1]:
            # If the middle element is less than its right neighbor,
            # then a peak element must be on the right half
            left = mid + 1
        else:
            # If the middle element is greater than or equal to its right neighbor,
            # then a peak element must be on the left half (including mid)
            right = mid

    # When left == right, we have found a peak element
    return left

# Test cases
print(find_peak_element([1, 2, 3, 1]))         # Output: 2
print(find_peak_element([1, 2, 1, 3, 5, 6, 4])) # Output: 5
