def insertion_sort(arr):
    n = len(arr)
    # Traverse through 1 to len(arr)
    for i in range(1, n):
        key = arr[i]
        # Move elements of arr[0..i-1], that are greater than key,
        # to one position ahead of their current position
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

# Test cases
test_cases = [
    [],
    [1],
    [7, 7, 7, 7],
    [-5, -1, -3, -2, -4],
    [5, 2, 9, 1, 5, 6],
    [10, 8, 6, 4, 2],
    [1, 2, 3, 4, 5]
]

# Applying the insertion_sort function to the test cases
for i, test in enumerate(test_cases, 1):
    sorted_array = insertion_sort(test.copy())  # Use .copy() to avoid modifying the original list
    print(f"Test Case {i}: Input: {test} => Output: {sorted_array}")
